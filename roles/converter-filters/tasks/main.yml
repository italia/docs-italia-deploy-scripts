- name: check existing stack
  stat:
    path: /usr/local/bin/stack
  register: stack

- name: Download stack
  get_url:
    url: https://github.com/commercialhaskell/stack/releases/download/v1.7.1/stack-1.7.1-linux-x86_64.tar.gz
    dest: /tmp/stack-1.7.1-linux-x86_64.tar.gz
    mode: 0660
  when: converter == 1 and not stack.stat.exists and converter_build == 1
  tags:
     - setup

- name: extract stack
  unarchive:
    src: /tmp/stack-1.7.1-linux-x86_64.tar.gz
    dest: /tmp
    remote_src: yes
    exclude: doc,LICENSE
  when: converter == 1 and not stack.stat.exists and converter_build == 1
  tags:
     - setup

- name: install stack
  copy:
    src: /tmp/stack-1.7.1-linux-x86_64/stack
    dest: /usr/local/bin
    mode: 0755
    remote_src: yes
  when: converter == 1 and not stack.stat.exists and converter_build == 1
  tags:
     - setup

- name: support packages
  apt: pkg={{ item }} state=present update_cache=true install_recommends=no
  with_items:
    - libgmp3-dev
  when: app == 1
  tags:
     - setup

- name: setup checkout path
  file: path="{{ converter_checkout_path }}" owner="{{ converter_user }}" state=directory
  when: converter == 1 and converter_build == 1
  tags:
     - deploy_converter
     - setup

- name: clone converter
  become_user: "{{ converter_user }}"
  git: repo={{ converter_repo }} dest="{{ converter_checkout_path }}/docs-italia-comandi-conversione" version={{ converter_branch }} force={{ force }}
  when: converter == 1 and converter_build == 1
  tags:
     - deploy_converter
     - setup

- name: clone filters
  become_user: "{{ converter_user }}"
  git: repo={{ converter_filters_repo }} dest="{{ converter_checkout_path }}/docs-italia-converter-filters" version={{ converter_filters_branch }} force={{ force }}
  when: converter == 1 and converter_build == 1
  tags:
     - deploy_converter
     - setup

- name: build conversion commands - expect a **long wait** before it's ready
  become_user: "{{ converter_user }}"
  command: chdir="{{ converter_checkout_path }}/docs-italia-comandi-conversione" stack build
  when: converter == 1 and converter_build == 1
  tags:
     - deploy_converter
     - setup

- name: build converter_filters
  become_user: "{{ converter_user }}"
  command: chdir="{{ converter_checkout_path }}/docs-italia-converter-filters" stack build
  when: converter == 1 and converter_build == 1
  tags:
     - deploy_converter
     - setup

- name: local install conversion commands - expect a **long wait** before it's ready
  become_user: "{{ converter_user }}"
  command: chdir="{{ converter_checkout_path }}/docs-italia-comandi-conversione" stack install
  when: converter == 1 and converter_build == 1
  tags:
     - deploy_converter
     - setup

- name: local install converter_filters
  become_user: "{{ converter_user }}"
  command: chdir="{{ converter_checkout_path }}/docs-italia-converter-filters" stack install
  when: converter == 1 and converter_build == 1
  tags:
     - deploy_converter
     - setup

- name: remove existing commands
  file:
    path: /usr/local/bin/{{ item }}
    state: absent
  with_items:
    - converti
    - filtro-*
    - pandoc
    - pandoc-font-to-style
    - pandoc-to-sphinx
  when: converter == 1
  tags:
     - deploy_converter
     - setup

- name: download pre-built packages
  get_url:
    url: "{{ converter_binary_url }}"
    dest: "{{ converter_checkout_path }}/{{ converter_binary_archive }}"
    remote_src: yes
    force: "{{ force }}"
  when: converter == 1 and converter_build == 0
  tags:
     - deploy_converter
     - setup

- name: install pre-built packages
  unarchive:
    src: "{{ converter_checkout_path }}/{{ converter_binary_archive }}"
    dest: /usr/local/bin
    remote_src: yes
  when: converter == 1 and converter_build == 0
  tags:
     - deploy_converter
     - setup

- name: local install filters / commands
  copy: dest="/usr/local/bin/{{ item }}" src="{{ converter_home }}/.local/bin/{{ item }}" mode=0755 remote_src=yes
  with_items:
    - converti
    - filtro-acronimi
    - filtro-didascalia
    - filtro-quotes
    - filtro-rimuovi-div
    - filtro-stile-liste
    - pandoc
    - pandoc-font-to-style
    - pandoc-to-sphinx
  when: converter == 1 and converter_build == 1
  tags:
     - deploy_converter
     - setup

- name: cleanup build files
  file:
    path: "{{ converter_home }}/.stack"
    state: absent
  when: converter == 1 and converter_cleanup == 1
  tags:
     - deploy_converter
     - setup
